{
    "comment": "This file was automatically generated by `rooms_generator.py`. Parameters: {{ p }}",
    "root": "root",
    "components": {
        "initial": {
            "type": "prism",
            "path": "initial.prism",
            ">|": ["s=0"],
            "|>": ["s=1", "s=2", "s=3"]
        },

        "final": {
            "type": "prism",
            "path": "final.prism",
            ">|": ["s=1", "s=2", "s=3"],
            "|>": ["s=4"]
        },

        "windy_safe": {
            "type": "prism",
            "path": "windy_safe.prism",
            ">|": ["{{entrance_one}}&norm_ent_exit=1"],
            "|<": ["{{entrance_two}}&norm_ent_exit=1"],
            "|>": ["{{exit_one}}&norm_ent_exit=2"],
            "<|": ["{{exit_two}}&norm_ent_exit=2"]
        },

        "windy_unsafe": {
            "type": "prism",
            "path": "windy_unsafe.prism",
            ">|": ["{{entrance_one}}&norm_ent_exit=1"],
            "|<": ["{{entrance_two}}&norm_ent_exit=1"],
            "|>": ["{{exit_one}}&norm_ent_exit=2"],
            "<|": ["{{exit_two}}&norm_ent_exit=2"]
        },

        "calm_safe": {
            "type": "prism",
            "path": "calm_safe.prism",
            ">|": ["{{entrance_one}}&norm_ent_exit=1"],
            "|<": ["{{entrance_two}}&norm_ent_exit=1"],
            "|>": ["{{exit_one}}&norm_ent_exit=2"],
            "<|": ["{{exit_two}}&norm_ent_exit=2"]
        },

        "calm_unsafe": {
            "type": "prism",
            "path": "calm_unsafe.prism",
            ">|": ["{{entrance_one}}&norm_ent_exit=1"],
            "|<": ["{{entrance_two}}&norm_ent_exit=1"],
            "|>": ["{{exit_one}}&norm_ent_exit=2"],
            "<|": ["{{exit_two}}&norm_ent_exit=2"]
        },

{% for l in grid %}
        "layer{{ loop.index0 }}": {
            "type": "sequence",
            "values": [
{% for v in l %}
                "{{v}}"{% if not loop.last %},{% endif %}

{% endfor %}
            ]
        },
{% endfor %}
        "stacked": {
            "type": "sum",
            "values": [
{% for l in grid %}
                "layer{{ loop.index0 }}"{% if not loop.last %},{% endif %}

{% endfor %}
            ]
        },

        "root": {
            "type": "sequence",
            "values": [
                "initial",
                "stacked",
                "final"
            ]
        }
    }
}
