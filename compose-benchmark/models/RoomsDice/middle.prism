mdp

const int ROUNDS = 100;
const int EXITS = 5;
const int LEVELS = 100;
const int MAX_LEVEL = LEVELS-1;
const int LEVELS_PER_EXIT = LEVELS/EXITS;

module middle
    round : [ 0 .. ROUNDS ];
    level : [ 0 .. MAX_LEVEL ];
    at_end : [ 0 .. 1 ];

    [steady] playing -> 0.9:(round'=round+1) + 0.09:(round'=round+1) & (level'=max(0, level-1)) + 0.01:(round'=round+1) & (level'=max(0, level-2));
    [gamble] playing -> 0.33:(round'=round+1) & (level'=max(0, level-5)) + 0.34:(round'=round+1) + 0.33:(round'=round+1) & (level'=min(MAX_LEVEL, level+5));
    [risky] playing -> 0.25:(round'=round+1) & (level'=min(MAX_LEVEL, level+20)) + 0.75:(round'=round+1) & (level'=max(0, level-30));

    [] !playing & at_end=0 -> 1:(at_end'=1) & (level'=level/LEVELS_PER_EXIT);
    [] !playing & at_end=1 -> true;
endmodule

formula playing = round<ROUNDS;

init
    round=0 & (
        level=0|
        level=60
    ) & at_end=0
endinit
